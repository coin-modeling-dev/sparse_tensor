{
  "StochasticInventory": {
    "type": "model",
    "style": "stochastic multi-period linear",
    "data": {
      "source1": {
        "database": "db2",
        "defines": [
          "Products",
          "InitialBalance"
        ],
        "sql": "Select Products, InitialBalance from table where ... "
      },
      "source2": {
        "database": "db2",
        "defines": [
          "Time",
          "Product",
          "Cost",
          "Revenue",
          "Forecast",
          "UpperRange",
          "LowerRange"
        ],
        "sql": "Select Cost,Time,Product ... from table where ..."
      },
      "source3": {
        "module": "discrete.json",
        "defines": "Demand[Time]",
        "inputs": {
          "I": "Products[Time]",
          "N": 3,
          "P": [
            0.2,
            0.6,
            0.2
          ],
          "V": [
            "LowerRange[Time]",
            "Forecasts[Time]",
            "UpperRange[Time]"
          ]
        }
      }
    },
    "formulation": {
      "optimization": "min",
      "objective": [
        {
          "module": "expected.json",
          "inputs": "TotalCost"
        },
        {
          "module": "CVaR.json",
          "inputs": "TotalCost"
        }
      ],
      "TotalCost": {
        "module": "scenario_tree.json",
        "inputs": {
          "T": "Time",
          "D": {
            "module": "inventory.json",
            "inputs": {
              "T": "Time",
              "P": "Products",
              "B0": "InitialBalance",
              "D": "Demand",
              "CX": "Costs"
            }
          }
        },
        "outputs": "TC"
      }
    },
    "solver": "SMI"
  }
}


